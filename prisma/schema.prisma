// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Rol {
  ADMIN
  VENDEDOR
  SOPORTE
}

model Usuario {
  id        Int        @id @default(autoincrement())
  nombre    String
  email     String     @unique
  rol       Rol        @default(VENDEDOR)
  password  String
  contactos Contacto[] @relation("UsuarioContactos")
  createdAt     DateTime @default(now()) // Fecha de creación
  updatedAt     DateTime @updatedAt // Fecha de actualización
}

model Contacto {
  id          Int           @id @default(autoincrement())
  nombre      String
  email       String        @unique
  telefono    String?
  empresaId   Int?
  empresa     Empresa?      @relation(fields: [empresaId], references: [id], name: "EmpresaContactos")
  usuarioId   Int?
  usuario     Usuario?      @relation(fields: [usuarioId], references: [id], name: "UsuarioContactos")
  Interaccion Interaccion[]
  createdAt     DateTime @default(now()) // Fecha de creación
  updatedAt     DateTime @updatedAt // Fecha de actualización
}

model Empresa {
  id        Int        @id @default(autoincrement())
  nombre    String
  sector    String?
  direccion String?
  contactos Contacto[] @relation("EmpresaContactos")
  createdAt     DateTime @default(now()) // Fecha de creación
  updatedAt     DateTime @updatedAt // Fecha de actualización
}

model Interaccion {
  id         Int      @id @default(autoincrement())
  tipo       String // Ejemplo: 'llamada', 'email', 'reunión'
  fecha      DateTime @default(now())
  contactoId Int
  contacto   Contacto @relation(fields: [contactoId], references: [id])
  mensajes   Mensaje[] // Relación uno a muchos con Mensaje
  createdAt     DateTime @default(now()) // Fecha de creación
  updatedAt     DateTime @updatedAt // Fecha de actualización
}

model Mensaje {
  id              Int        @id @default(autoincrement())
  texto           String
  interaccionId   Int
  interaccion     Interaccion @relation(fields: [interaccionId], references: [id]) // Relación con Interaccion
  createdAt     DateTime @default(now()) // Fecha de creación
  updatedAt     DateTime @updatedAt // Fecha de actualización
}