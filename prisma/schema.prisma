// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Rol {
  ADMIN
  VENDEDOR
  SOPORTE
}

model Account {
  id                 String    @id @default(cuid())
  userId             String
  providerType       String
  providerId         String
  providerAccountId  String
  refreshToken       String?
  accessToken        String?
  accessTokenExpires DateTime?
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  user               User      @relation(fields: [userId], references: [id])

  @@unique([providerId, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  userId       String
  expires      DateTime
  sessionToken String   @unique
  accessToken  String   @unique
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  user         User     @relation(fields: [userId], references: [id])
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  password      String?
  emailVerified DateTime?
  image         String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  accounts      Account[]
  sessions      Session[]
  contactos     Contacto[] @relation(name: "UsuarioContactos")
  blogPosts     BlogPost[]
}

model VerificationRequest {
  id         String   @id @default(cuid())
  identifier String
  token      String   @unique
  expires    DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@unique([identifier, token])
}


model Contacto {
  id          Int           @id @default(autoincrement())
  nombre      String
  email       String        @unique
  telefono    String?
  empresaId   Int?
  empresa     Empresa?      @relation(fields: [empresaId], references: [id], name: "EmpresaContactos")
  usuarioId   String?
  user        User?         @relation(fields: [usuarioId], references: [id], name: "UsuarioContactos")
  Interaccion Interaccion[]
  createdAt     DateTime @default(now()) // Fecha de creación
  updatedAt     DateTime @updatedAt // Fecha de actualización
}

model Empresa {
  id        Int        @id @default(autoincrement())
  nombre    String     @unique
  sector    String?
  direccion String?
  contactos Contacto[] @relation("EmpresaContactos")
  createdAt     DateTime @default(now()) // Fecha de creación
  updatedAt     DateTime @updatedAt @default(now())// Fecha de actualización
}

model Interaccion {
  id         Int      @id @default(autoincrement())
  tipo       String // Ejemplo: 'llamada', 'email', 'reunión'
  fecha      DateTime @default(now())
  contactoId Int
  contacto   Contacto @relation(fields: [contactoId], references: [id])
  mensajes   Mensaje[] // Relación uno a muchos con Mensaje
  createdAt     DateTime @default(now()) // Fecha de creación
  updatedAt     DateTime @updatedAt @default(now()) // Fecha de actualización
}

model Mensaje {
  id              Int        @id @default(autoincrement())
  texto           String
  interaccionId   Int
  interaccion     Interaccion @relation(fields: [interaccionId], references: [id]) // Relación con Interaccion
  createdAt     DateTime @default(now()) // Fecha de creación
  updatedAt     DateTime @updatedAt @default(now()) // Fecha de actualización
}

model HeroImage {
  id          Int      @id @default(autoincrement())
  imagePath   String   // Ruta de la imagen
  title       String?  // Título opcional de la imagen
  description String?  // Descripción opcional
  isActive    Boolean  @default(true) // Indica si la imagen está activa
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt @default(now())
}

model Proyecto {
  id        Int      @id @default(autoincrement())
  nombre    String
  imagenUrl String
  isActive  Boolean @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt @default(now())
}

model BlogPost {
  id          Int      @id @default(autoincrement())
  title       String
  slug        String   @unique
  excerpt     String?
  content     String   @db.Text
  featuredImage String?
  metaTitle   String?
  metaDescription String?
  keywords    String?
  published   Boolean  @default(false)
  publishedAt DateTime?
  authorId    String?
  author      User?    @relation(fields: [authorId], references: [id])
  categories  BlogCategory[]
  tags        BlogTag[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model BlogCategory {
  id          Int        @id @default(autoincrement())
  name        String     @unique
  slug        String     @unique
  description String?
  posts       BlogPost[]
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
}

model BlogTag {
  id        Int        @id @default(autoincrement())
  name      String     @unique
  slug      String     @unique
  posts     BlogPost[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

model DroneService {
  id          Int      @id @default(autoincrement())
  title       String
  slug        String   @unique
  description String   @db.Text
  shortDescription String?
  featuredImage String?
  gallery     String?  @db.Text // JSON array of image URLs
  price       Decimal? @db.Decimal(10,2)
  duration    String?
  equipment   String?  @db.Text
  deliverables String? @db.Text
  metaTitle   String?
  metaDescription String?
  keywords    String?
  isActive    Boolean  @default(true)
  featured    Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model DroneProject {
  id          Int      @id @default(autoincrement())
  title       String
  slug        String   @unique
  description String   @db.Text
  location    String?
  area        String?
  equipment   String?
  deliverables String? @db.Text
  featuredImage String?
  gallery     String?  @db.Text // JSON array of image URLs
  completedAt DateTime?
  clientName  String?
  metaTitle   String?
  metaDescription String?
  keywords    String?
  isActive    Boolean  @default(true)
  featured    Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Cotizacion {
  id          Int      @id @default(autoincrement())
  nombre      String
  email       String
  telefono    String?
  empresa     String?
  servicio    String
  descripcion String   @db.Text
  ubicacion   String?
  area        String?
  presupuesto String?
  fechaRequerida DateTime?
  estado      String   @default("pendiente") // pendiente, contactado, cotizado, cerrado
  notas       String?  @db.Text
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}